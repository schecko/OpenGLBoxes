; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23506.0 

	TITLE	D:\scottsdocs\sourcecode\OpenGLboxes\code\eventlistener.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	??0?$tvec2@M$0A@@glm@@QAE@XZ			; glm::tvec2<float,0>::tvec2<float,0>
PUBLIC	??0MouseEvents@@QAE@XZ				; MouseEvents::MouseEvents
PUBLIC	??0Events@@QAE@XZ				; Events::Events
PUBLIC	??0EventListener@@QAE@XZ			; EventListener::EventListener
PUBLIC	??1EventListener@@QAE@XZ			; EventListener::~EventListener
PUBLIC	?SetKey@EventListener@@QAEXW4KeyCode@@_N@Z	; EventListener::SetKey
PUBLIC	?GetKey@EventListener@@QAE_NW4KeyCode@@@Z	; EventListener::GetKey
PUBLIC	?SetMousePos@EventListener@@QAEXU?$tvec2@M$0A@@glm@@@Z ; EventListener::SetMousePos
PUBLIC	?GetMousePos@EventListener@@QAE?AU?$tvec2@M$0A@@glm@@XZ ; EventListener::GetMousePos
PUBLIC	?GetLastMousePos@EventListener@@QAE?AU?$tvec2@M$0A@@glm@@XZ ; EventListener::GetLastMousePos
PUBLIC	?GetMouseScroll@EventListener@@QAEHXZ		; EventListener::GetMouseScroll
PUBLIC	?SetViewportNeedsUpdating@EventListener@@QAEX_NII@Z ; EventListener::SetViewportNeedsUpdating
PUBLIC	?GetViewportNeedsUpdating@EventListener@@QAE_NXZ ; EventListener::GetViewportNeedsUpdating
PUBLIC	?SetIsMouseInWindow@EventListener@@QAEX_N@Z	; EventListener::SetIsMouseInWindow
PUBLIC	?GetIsMouseInWindow@EventListener@@QAE_NXZ	; EventListener::GetIsMouseInWindow
PUBLIC	?SetMouseEnteredWindow@EventListener@@QAEX_N@Z	; EventListener::SetMouseEnteredWindow
PUBLIC	?GetMouseEnteredWindow@EventListener@@QAE_NXZ	; EventListener::GetMouseEnteredWindow
PUBLIC	?SetCloseGame@EventListener@@QAEXXZ		; EventListener::SetCloseGame
PUBLIC	?GetCloseGame@EventListener@@QAE_NXZ		; EventListener::GetCloseGame
PUBLIC	?GetWindowEvents@EventListener@@QAEPAUWindowEvents@@XZ ; EventListener::GetWindowEvents
PUBLIC	?GetMouseEvents@EventListener@@QAEPAUMouseEvents@@XZ ; EventListener::GetMouseEvents
PUBLIC	?SwapEvents@EventListener@@QAEXXZ		; EventListener::SwapEvents
PUBLIC	__real@00000000
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	_memset:PROC
EXTRN	__fltused:DWORD
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File d:\scottsdocs\sourcecode\openglboxes\code\eventlistener.cpp
;	COMDAT ?SwapEvents@EventListener@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?SwapEvents@EventListener@@QAEXXZ PROC			; EventListener::SwapEvents, COMDAT
; _this$ = ecx

; 73   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 74   :     events.mouseEvents.lastPos = events.mouseEvents.pos;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [eax+12]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], ecx
	mov	DWORD PTR [eax+20], edx

; 75   :     // events[currentEvent] = events[currentEvent];
; 76   :     //events[lastEvent] = {};
; 77   :     //ubyte temp = currentEvent;
; 78   :     //currentEvent = currentEvent;
; 79   :     //currentEvent = temp;
; 80   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?SwapEvents@EventListener@@QAEXXZ ENDP			; EventListener::SwapEvents
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File d:\scottsdocs\sourcecode\openglboxes\code\eventlistener.cpp
;	COMDAT ?GetMouseEvents@EventListener@@QAEPAUMouseEvents@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetMouseEvents@EventListener@@QAEPAUMouseEvents@@XZ PROC ; EventListener::GetMouseEvents, COMDAT
; _this$ = ecx

; 112  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 113  :     return &events.mouseEvents;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8

; 114  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetMouseEvents@EventListener@@QAEPAUMouseEvents@@XZ ENDP ; EventListener::GetMouseEvents
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File d:\scottsdocs\sourcecode\openglboxes\code\eventlistener.cpp
;	COMDAT ?GetWindowEvents@EventListener@@QAEPAUWindowEvents@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetWindowEvents@EventListener@@QAEPAUWindowEvents@@XZ PROC ; EventListener::GetWindowEvents, COMDAT
; _this$ = ecx

; 107  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 108  :     return &events.windowEvents;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 40					; 00000028H

; 109  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetWindowEvents@EventListener@@QAEPAUWindowEvents@@XZ ENDP ; EventListener::GetWindowEvents
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File d:\scottsdocs\sourcecode\openglboxes\code\eventlistener.cpp
;	COMDAT ?GetCloseGame@EventListener@@QAE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetCloseGame@EventListener@@QAE_NXZ PROC		; EventListener::GetCloseGame, COMDAT
; _this$ = ecx

; 102  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 103  :     return events.windowEvents.closeGame;

	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+48]

; 104  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetCloseGame@EventListener@@QAE_NXZ ENDP		; EventListener::GetCloseGame
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File d:\scottsdocs\sourcecode\openglboxes\code\eventlistener.cpp
;	COMDAT ?SetCloseGame@EventListener@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?SetCloseGame@EventListener@@QAEXXZ PROC		; EventListener::SetCloseGame, COMDAT
; _this$ = ecx

; 97   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 98   :     events.windowEvents.closeGame = true;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+48], 1

; 99   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?SetCloseGame@EventListener@@QAEXXZ ENDP		; EventListener::SetCloseGame
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File d:\scottsdocs\sourcecode\openglboxes\code\eventlistener.cpp
;	COMDAT ?GetMouseEnteredWindow@EventListener@@QAE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetMouseEnteredWindow@EventListener@@QAE_NXZ PROC	; EventListener::GetMouseEnteredWindow, COMDAT
; _this$ = ecx

; 67   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 68   :     return events.mouseEvents.mouseEnteredWindow;

	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+32]

; 69   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetMouseEnteredWindow@EventListener@@QAE_NXZ ENDP	; EventListener::GetMouseEnteredWindow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File d:\scottsdocs\sourcecode\openglboxes\code\eventlistener.cpp
;	COMDAT ?SetMouseEnteredWindow@EventListener@@QAEX_N@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_value$ = 8						; size = 1
?SetMouseEnteredWindow@EventListener@@QAEX_N@Z PROC	; EventListener::SetMouseEnteredWindow, COMDAT
; _this$ = ecx

; 62   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 63   :     events.mouseEvents.mouseEnteredWindow = value;

	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _value$[ebp]
	mov	BYTE PTR [eax+32], cl

; 64   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetMouseEnteredWindow@EventListener@@QAEX_N@Z ENDP	; EventListener::SetMouseEnteredWindow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File d:\scottsdocs\sourcecode\openglboxes\code\eventlistener.cpp
;	COMDAT ?GetIsMouseInWindow@EventListener@@QAE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetIsMouseInWindow@EventListener@@QAE_NXZ PROC		; EventListener::GetIsMouseInWindow, COMDAT
; _this$ = ecx

; 57   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 58   :     return events.mouseEvents.isMouseInWindow;

	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+31]

; 59   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetIsMouseInWindow@EventListener@@QAE_NXZ ENDP		; EventListener::GetIsMouseInWindow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File d:\scottsdocs\sourcecode\openglboxes\code\eventlistener.cpp
;	COMDAT ?SetIsMouseInWindow@EventListener@@QAEX_N@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_value$ = 8						; size = 1
?SetIsMouseInWindow@EventListener@@QAEX_N@Z PROC	; EventListener::SetIsMouseInWindow, COMDAT
; _this$ = ecx

; 52   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 53   :     events.mouseEvents.isMouseInWindow = value;

	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _value$[ebp]
	mov	BYTE PTR [eax+31], cl

; 54   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetIsMouseInWindow@EventListener@@QAEX_N@Z ENDP	; EventListener::SetIsMouseInWindow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File d:\scottsdocs\sourcecode\openglboxes\code\eventlistener.cpp
;	COMDAT ?GetViewportNeedsUpdating@EventListener@@QAE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetViewportNeedsUpdating@EventListener@@QAE_NXZ PROC	; EventListener::GetViewportNeedsUpdating, COMDAT
; _this$ = ecx

; 47   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 48   :     return events.windowEvents.viewPortNeedsUpdating;

	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+40]

; 49   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetViewportNeedsUpdating@EventListener@@QAE_NXZ ENDP	; EventListener::GetViewportNeedsUpdating
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File d:\scottsdocs\sourcecode\openglboxes\code\eventlistener.cpp
;	COMDAT ?SetViewportNeedsUpdating@EventListener@@QAEX_NII@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_value$ = 8						; size = 1
_width$ = 12						; size = 4
_height$ = 16						; size = 4
?SetViewportNeedsUpdating@EventListener@@QAEX_NII@Z PROC ; EventListener::SetViewportNeedsUpdating, COMDAT
; _this$ = ecx

; 40   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 41   :     events.windowEvents.viewPortNeedsUpdating = true;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+40], 1

; 42   :     events.windowEvents.newClientHeight = height;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _height$[ebp]
	mov	DWORD PTR [eax+56], ecx

; 43   :     events.windowEvents.newClientWidth = width;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _width$[ebp]
	mov	DWORD PTR [eax+52], ecx

; 44   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?SetViewportNeedsUpdating@EventListener@@QAEX_NII@Z ENDP ; EventListener::SetViewportNeedsUpdating
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File d:\scottsdocs\sourcecode\openglboxes\code\eventlistener.cpp
;	COMDAT ?GetMouseScroll@EventListener@@QAEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetMouseScroll@EventListener@@QAEHXZ PROC		; EventListener::GetMouseScroll, COMDAT
; _this$ = ecx

; 35   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 36   :     return events.mouseEvents.scroll;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+36]

; 37   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetMouseScroll@EventListener@@QAEHXZ ENDP		; EventListener::GetMouseScroll
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File d:\scottsdocs\sourcecode\openglboxes\code\eventlistener.cpp
;	COMDAT ?GetLastMousePos@EventListener@@QAE?AU?$tvec2@M$0A@@glm@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?GetLastMousePos@EventListener@@QAE?AU?$tvec2@M$0A@@glm@@XZ PROC ; EventListener::GetLastMousePos, COMDAT
; _this$ = ecx

; 30   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 31   :     return events.mouseEvents.lastPos;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR [eax+20]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 32   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?GetLastMousePos@EventListener@@QAE?AU?$tvec2@M$0A@@glm@@XZ ENDP ; EventListener::GetLastMousePos
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File d:\scottsdocs\sourcecode\openglboxes\code\eventlistener.cpp
;	COMDAT ?GetMousePos@EventListener@@QAE?AU?$tvec2@M$0A@@glm@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?GetMousePos@EventListener@@QAE?AU?$tvec2@M$0A@@glm@@XZ PROC ; EventListener::GetMousePos, COMDAT
; _this$ = ecx

; 25   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 26   :     return events.mouseEvents.pos;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [eax+12]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 27   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?GetMousePos@EventListener@@QAE?AU?$tvec2@M$0A@@glm@@XZ ENDP ; EventListener::GetMousePos
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File d:\scottsdocs\sourcecode\openglboxes\code\eventlistener.cpp
;	COMDAT ?SetMousePos@EventListener@@QAEXU?$tvec2@M$0A@@glm@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pos$ = 8						; size = 8
?SetMousePos@EventListener@@QAEXU?$tvec2@M$0A@@glm@@@Z PROC ; EventListener::SetMousePos, COMDAT
; _this$ = ecx

; 20   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 21   :     events.mouseEvents.pos = pos;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pos$[ebp]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR _pos$[ebp+4]
	mov	DWORD PTR [eax+12], edx

; 22   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?SetMousePos@EventListener@@QAEXU?$tvec2@M$0A@@glm@@@Z ENDP ; EventListener::SetMousePos
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File d:\scottsdocs\sourcecode\openglboxes\code\eventlistener.cpp
;	COMDAT ?GetKey@EventListener@@QAE_NW4KeyCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_key$ = 8						; size = 4
?GetKey@EventListener@@QAE_NW4KeyCode@@@Z PROC		; EventListener::GetKey, COMDAT
; _this$ = ecx

; 16   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 17   :     return events.keys[key];

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _key$[ebp]
	mov	al, BYTE PTR [eax]

; 18   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?GetKey@EventListener@@QAE_NW4KeyCode@@@Z ENDP		; EventListener::GetKey
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File d:\scottsdocs\sourcecode\openglboxes\code\eventlistener.cpp
;	COMDAT ?SetKey@EventListener@@QAEXW4KeyCode@@_N@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_key$ = 8						; size = 4
_value$ = 12						; size = 1
?SetKey@EventListener@@QAEXW4KeyCode@@_N@Z PROC		; EventListener::SetKey, COMDAT
; _this$ = ecx

; 12   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 13   :     events.keys[key] = value;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _key$[ebp]
	mov	cl, BYTE PTR _value$[ebp]
	mov	BYTE PTR [eax], cl

; 14   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?SetKey@EventListener@@QAEXW4KeyCode@@_N@Z ENDP		; EventListener::SetKey
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File d:\scottsdocs\sourcecode\openglboxes\code\eventlistener.cpp
;	COMDAT ??1EventListener@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1EventListener@@QAE@XZ PROC				; EventListener::~EventListener, COMDAT
; _this$ = ecx

; 8    : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 9    : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1EventListener@@QAE@XZ ENDP				; EventListener::~EventListener
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File d:\scottsdocs\sourcecode\openglboxes\code\eventlistener.cpp
;	COMDAT ??0EventListener@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0EventListener@@QAE@XZ PROC				; EventListener::EventListener, COMDAT
; _this$ = ecx

; 4    : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 3    : EventListener::EventListener() :events(Events())

	push	60					; 0000003cH
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0Events@@QAE@XZ

; 5    : }

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0EventListener@@QAE@XZ ENDP				; EventListener::EventListener
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0Events@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0Events@@QAE@XZ PROC					; Events::Events, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0MouseEvents@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0Events@@QAE@XZ ENDP					; Events::Events
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0MouseEvents@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0MouseEvents@@QAE@XZ PROC				; MouseEvents::MouseEvents, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$tvec2@M$0A@@glm@@QAE@XZ		; glm::tvec2<float,0>::tvec2<float,0>
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0?$tvec2@M$0A@@glm@@QAE@XZ		; glm::tvec2<float,0>::tvec2<float,0>
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0MouseEvents@@QAE@XZ ENDP				; MouseEvents::MouseEvents
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File d:\scottsdocs\sourcecode\openglboxes\deps\include\glm\detail\type_vec2.inl
;	COMDAT ??0?$tvec2@M$0A@@glm@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$tvec2@M$0A@@glm@@QAE@XZ PROC			; glm::tvec2<float,0>::tvec2<float,0>, COMDAT
; _this$ = ecx

; 39   : 		{}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 37   : 				: x(0), y(0)

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax+4], xmm0

; 39   : 		{}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$tvec2@M$0A@@glm@@QAE@XZ ENDP			; glm::tvec2<float,0>::tvec2<float,0>
_TEXT	ENDS
END
